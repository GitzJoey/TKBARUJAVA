<beans:beans xmlns="http://www.springframework.org/schema/security"
			xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.springframework.org/schema/beans
								http://www.springframework.org/schema/beans/spring-beans.xsd
								http://www.springframework.org/schema/security
								http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true" disable-url-rewriting="true">
		<csrf />

		<intercept-url pattern="/setup/**" 		access="permitAll" />
		<intercept-url pattern="/static/**" 	access="permitAll" />
		<intercept-url pattern="/resources/**" 	access="permitAll" />
		<intercept-url pattern="/index.jsp" 	access="permitAll" />
		<intercept-url pattern="/login.html" 	access="permitAll" />
		
		<intercept-url pattern="/**" 			access="isAuthenticated()" />
		
		<form-login login-page="/login.html"
					default-target-url="/dologin.html"
					authentication-failure-url="/login.html?e=invalid" />
					
		<logout invalidate-session="true" delete-cookies="JSESSIONID" />
		
		<remember-me key="ReVKpgd2tKB4ch2TiLdO" 
					token-validity-seconds="432000"
					remember-me-parameter="cbx_remember_me"
					remember-me-cookie="tkbaruRememberMe"/>
					
		
		<session-management invalid-session-url="/login.html?e=session">
			<concurrency-control expired-url="/login.html?e=expired" max-sessions="1" session-registry-alias="sessionRegistry"/>
		</session-management>
	</http>
	
	<beans:import resource="servlet-context.xml" />
	
	<!-- Spring Security -->
	<beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="bCryptPasswordEncoder"></password-encoder>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="
					SELECT user_name AS USERNAME, passwd AS PASSWORD, CASE status WHEN 'L001_A' THEN 'true' ELSE 'false' END 'ENABLED'
					FROM tb_user
         			WHERE user_name=?;"
				
				authorities-by-username-query="
					SELECT u.user_name AS USERNAME, r.name AS ROLENAME
        			FROM tb_user u, tb_role r
        			WHERE u.role_id = r.role_id AND u.user_name=?;"				
			/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>